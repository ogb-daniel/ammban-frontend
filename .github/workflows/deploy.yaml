name: Deploy Next.js app to Azure Web App

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Build the app
        run: pnpm build

      - name: Create web.config
        run: |
          cat > web.config << 'EOL'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <webSocket enabled="false" />
              <handlers>
                <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
              </handlers>
              <rewrite>
                <rules>
                  <rule name="DynamicContent">
                    <match url="/*" />
                    <action type="Rewrite" url="server.js" />
                  </rule>
                </rules>
              </rewrite>
              <security>
                <requestFiltering removeServerHeader="true" />
              </security>
              <httpProtocol>
                <customHeaders>
                  <remove name="X-Powered-By" />
                </customHeaders>
              </httpProtocol>
            </system.webServer>
          </configuration>
          EOL

      - name: Create server.js
        run: |
          cat > server.js << 'EOL'
          const { createServer } = require('http');
          const { parse } = require('url');
          const next = require('next');

          const dev = process.env.NODE_ENV !== 'production';
          const hostname = '0.0.0.0';
          const port = process.env.PORT || 3000;

          // Create the Next.js app
          const app = next({ dev });
          const handle = app.getRequestHandler();

          app.prepare().then(() => {
            createServer((req, res) => {
              // Parse request URL
              const parsedUrl = parse(req.url, true);
              
              // Let Next.js handle the request
              handle(req, res, parsedUrl);
            }).listen(port, hostname, (err) => {
              if (err) throw err;
              console.log(`> Ready on http://${hostname}:${port}`);
            });
          });
          EOL

      - name: Prepare deployment package
        run: |
          mkdir -p deploy

          # Copy standalone build if it exists
          if [ -d ".next/standalone" ]; then
            cp -r .next/standalone/* deploy/
          else
            # Fallback if standalone output doesn't exist
            mkdir -p deploy/.next
            cp -r .next/server deploy/.next/ || true
            cp -r .next/required-server-files.json deploy/.next/ || true
            cp package.json deploy/
          fi

          # Create .next/static directory in the deployment
          mkdir -p deploy/.next/static

          # Copy static files
          if [ -d ".next/static" ]; then
            cp -r .next/static deploy/.next/
          fi

          # Copy public directory if it exists
          if [ -d "public" ]; then
            cp -r public deploy/
          fi

          # Copy next.config.js
          cp next.config.js deploy/ || echo "next.config.js not found, skipping"

          # Copy server.js and web.config
          cp server.js web.config deploy/

          # Create zip file
          cd deploy && zip -r ../app.zip . && cd ..

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ammban-frontend
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: app.zip
